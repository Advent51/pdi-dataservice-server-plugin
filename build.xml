<project name="JackRabbit Repository Plugin" basedir="." default="default" xmlns:ivy="antlib:org.apache.ivy.ant">

  <!-- Import the subfloor-pkg.xml file which contains all the default tasks -->
  <import file="build-res/subfloor-pkg.xml" />
  
  <target name="install">
    <unzip src="${dist.dir}/${package.basename}.zip" dest="${kettle.plugin.dir}" overwrite="true">
    </unzip>
  </target>

  <!-- 
  subfloor overrides 
  -->
  <path id="classpath">
    <fileset dir="${devlib.dir}">
      <include name="*.jar" />
    </fileset>
    <fileset dir="${lib.dir}">
      <include name="*.jar" />
    </fileset>
  	<!--
    <fileset dir="../Kettle/lib">
      <include name="*.jar" />
    </fileset>
    -->
  </path>
  
  <!-- Copy all jars over to the plugin zip, 
  except for kettle, licensing jars -->
  <target name="assemble.copy-libs">
  	
  	<copy todir="${approot.stage.dir}">
      <fileset dir="${lib.dir}" >
      	<exclude name="kettle-*.jar"/>
      	<exclude name="pentaho-ee-dsc-core-${dependency.pentaho-ee-dsc.revision}.jar"/>
      </fileset>
      <fileset file="${dist.dir}/${ivy.artifact.id}-${project.revision}.jar" />
    </copy>

	<if>
      <available file="${dist.dir}/pentaho-ee-dsc-core-${dependency.pentaho-ee-dsc.revision}.jar" />
      <then>
        <!-- copy the obfuscated license jar to the plugin dist lib folder -->
        <copy todir="${approot.stage.dir}">
          <fileset dir="${dist.dir}">
            <include name="pentaho-ee-dsc-core-${dependency.pentaho-ee-dsc.revision}.jar" />
          </fileset>
        </copy>
      </then>
      <else>
        <!-- copy the license jar to the plugin dist lib folder -->
        <copy todir="${approot.stage.dir}">
          <fileset dir="${lib.dir}">
            <include name="pentaho-ee-dsc-core-${dependency.pentaho-ee-dsc.revision}.jar" />
          </fileset>
        </copy>
      </else>
    </if>

  </target>
 
  <!-- Release process calls this target. -->

	<!-- 
	
	-->

	<target name="obfuscate">

    <move todir="${dist.dir}">
      <fileset dir="${dist.dir}">
        <include name="**/*.jar" />
      	<exclude name="**/*-orig.jar" />
      </fileset>
    	<mapper type="glob" from="*.jar" to="*-orig.jar"/>
	</move>
		
		
	<taskdef resource="proguard/ant/task.properties" classpath="obf-lib/proguard-4.3.jar" />
    <proguard>
      <![CDATA[
      -useuniqueclassmembernames
      -dontoptimize
      -dontshrink
      -dontnote
      -printmapping ${dist.dir}/proguard-${ivy.artifact.id}-${project.revision}.map
      -applymapping ${dist.dir}/proguard-biserver-ee-${dependency.bi-platform.revision}.map 
      -renamesourcefileattribute SourceFile
      -keepattributes SourceFile,LineNumberTable
      -printseeds

      -libraryjars ${java.home}/lib/rt.jar
      -libraryjars ${java.home}/lib/jsse.jar
      -libraryjars ${java.home}/lib/jce.jar
      -libraryjars ${lib.dir}(!pentaho-ee-dsc-core-${dependency.pentaho-ee-dsc.revision}.jar)
      -libraryjars ${devlib.dir}
      
 	  -injars      ${lib.dir}/pentaho-ee-dsc-core-${dependency.pentaho-ee-dsc.revision}.jar	
	  -outjars     ${dist.dir}/pentaho-ee-dsc-core-${dependency.pentaho-ee-dsc.revision}.jar
      -injars      ${dist.dir}/${ivy.artifact.id}-${project.revision}-orig.jar
      -outjars     ${dist.dir}/${ivy.artifact.id}-${project.revision}.jar
 
      
	  -keepclasseswithmembernames class * implements org.pentaho.di.repository.Repository {
		  public protected *;
	  }
  	  -keepclasseswithmembernames class * implements org.pentaho.di.repository.RepositorySecurityProvider {
  		  public protected *;
  	  }
	  -keepclasseswithmembernames class * implements ObjectRevision {
		  public protected *;
	  }
	  -keepclasseswithmembernames class * implements org.pentaho.di.repository.RepositoryMeta {
		  public protected *;
	  }
	  -keepclasseswithmembernames class * implements org.pentaho.di.repository.RepositorySecurityProvider {
		  public protected *;
	  }
  	  -keepclasseswithmembernames class * implements org.pentaho.di.repository.RepositorySecurityProvider {
  		  public protected *;
  	  }
  	  -keepclasseswithmembernames class * implements  org.pentaho.di.repository.RepositoryVersionRegistry {
  		  public protected *;
  	  }
      -keepnames class org.pentaho.di.repository.jcr.JCRRepositoryLocation
    	
      -keepattributes Exceptions, InnerClasses, *Annotation*
    
      ]]></proguard>

    <delete>
      <fileset dir="${dist.dir}">
        <include name="**/*-orig.jar" />
      </fileset>
	</delete>

  </target>
	
  
  <!-- 
  The following overrides are in place to suppress IVY dependency management.  If you
  want to turn IVY off, you can uncomment these overrides. 
  -->

  <!-- Set default target to skip the ivy "resolve" step -->
  <!--target name="default" depends="clean-all,dist,package" /-->
  
  <!-- Set the clean-all target to skip the "clean-jars" step.  We do not want our build
  process to delete the "lib" dir -->
  <!--target name="clean-all" depends="clean"/-->

</project>
